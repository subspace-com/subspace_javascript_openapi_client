/**
 * Subspace Product API
 * # Introduction  The Subspace API is based on REST, has resource-oriented URLs, returns JSON-encoded responses, and returns standardHTTP response codes.  The base URL for the API is `https://api.subspace.com/`  # Naming Convention  **EARLY ACCESS NOTE:** There is no “stable” version yet.  Once there is, the version name **stable** will be used to access the latest stable API version.   * Example: `https://api.subspace.com/stable` * Version name currently in use is: *v1*   * Example: `https://api.subspace.com/v1`  # Authentication  ## API Tokens  Subspace authenticates your API requests using JWT Bearer tokens.  The provided client library requires this JWT to be set before it can be used, by setting the local access token in the local configuration.  This is done by updating the configuration line marked \"YOUR ACCESS TOKEN\" by replacing the text \"YOUR ACCESS TOKEN\" with your JWT Bearer token.  Bearer tokens are granted by requesting one (as noted below) and presenting your publishable (client_id) and secret (client_secret) tokens.     Subspace provides two types of API tokens: publishable (client_id) and secret (client_secret).  These are available in the Subspace console.   * **Publishable** API tokens (client_id) are meant solely to identify your account with Subspace, they aren’t secret. They can be published in places like your website JavaScript code, or in an iPhone or Android app.   * **Secret** API tokens (client_secret) should be kept confidential and only stored on your own servers. Your account’s secret API token will allow you to acquire a valid JWT token authorized to perform any API request to Subspace.  ## Getting a JWT Bearer Token  Subspace uses auth0 for JWT token management.  You can acquire a JWT token by utilizing `https://id.subspace.com` and following the instructions in the curl example below.  ## Protecting Your API Tokens    * **JWT tokens have a expiration time of 24 hours.**  Once expired, you will have to use your Subspace private API and public token to request a new one.   * The Subspace private token can be rotated from within the Subspace console.  Rotation may take up to 10 minutes for all systems to update state to invalidate the older token and enable the new one. * **Keep your secret token safe.** Your secret token can make any API call on behalf of your account, including changes that may impact billing such as enabling pay-as-you-go charges. Do not store your secret token in your version control system. Do not use your secret token outside your web server, such as a browser, mobile app, or distributed file.   * **You may use the Subspace console to acquire an API token.**  * **You may use the Subspace console to disable pay-as-you-go.** This may prevent unexpected charges due to unauthorized or abnormal usage.  **Acquiring a valid JWT**  Command line example: ``` curl --request POST           --url 'https://id.subspace.com/oauth/token'           --header 'content-type: application/json'           --data '{ \"client_id\": YOURCLIENTID, \"client_secret\": YOURCLIENTSECRET, \"audience\": \"https://api.subspace.com/\", \"grant_type\": \"client_credentials\" }' ``` 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sales@subspace.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Body from './model/Body';
import Body1 from './model/Body1';
import ProtobufAny from './model/ProtobufAny';
import RpcStatus from './model/RpcStatus';
import V1Accelerator from './model/V1Accelerator';
import V1ListAcceleratorsResponse from './model/V1ListAcceleratorsResponse';
import V1ListSipTeleportResponse from './model/V1ListSipTeleportResponse';
import V1NextPage from './model/V1NextPage';
import V1Protocol from './model/V1Protocol';
import V1SipTeleportResponse from './model/V1SipTeleportResponse';
import V1SipTeleportStatus from './model/V1SipTeleportStatus';
import V1TeleportAddresses from './model/V1TeleportAddresses';
import V1TransportType from './model/V1TransportType';
import AcceleratorServiceApi from './api/AcceleratorServiceApi';
import SipTeleportServiceApi from './api/SipTeleportServiceApi';


/**
* _IntroductionThe_Subspace_API_is_based_on_REST_has_resource_oriented_URLs_returns_JSON_encoded_responses_and_returns_standardHTTP_response_codes_The_base_URL_for_the_API_is_https__api_subspace_com__Naming_ConventionEARLY_ACCESS_NOTE_There_is_no_stable_version_yet___Once_there_is_the_version_name_stable_will_be_used_to_access_the_latest_stable_API_version____Example_https__api_subspace_com_stable_Version_name_currently_in_use_is_v1___Example_https__api_subspace_com_v1_Authentication_API_TokensSubspace_authenticates_your_API_requests_using_JWT_Bearer_tokens___The_provided_client_library_requires_this_JWT_to_be_set_before_it_can_be_used_by_setting_the_local_access_token_in_the_local_configuration___This_is_done_by_updating_the_configuration_line_marked_YOUR_ACCESS_TOKEN_by_replacing_the_text_YOUR_ACCESS_TOKEN_with_your_JWT_Bearer_token_Bearer_tokens_are_granted_by_requesting_one__as_noted_below_and_presenting_your_publishable__client_id_and_secret__client_secret_tokens____Subspace_provides_two_types_of_API_tokens_publishable__client_id_and_secret__client_secret___These_are_available_in_the_Subspace_console____Publishable_API_tokens__client_id_are_meant_solely_to_identify_your_account_with_Subspace_they_arent_secret__They_can_be_published_in_places_like_your_website_JavaScript_code_or_in_an_iPhone_or_Android_app____Secret_API_tokens__client_secret_should_be_kept_confidential_and_only_stored_on_your_own_servers__Your_accounts_secret_API_token_will_allow_you_to_acquire_a_valid_JWT_token_authorized_to_perform_any_API_request_to_Subspace__Getting_a_JWT_Bearer_TokenSubspace_uses_auth0_for_JWT_token_management___You_can_acquire_a_JWT_token_by_utilizing_https__id_subspace_com_and_following_the_instructions_in_the_curl_example_below__Protecting_Your_API_Tokens___JWT_tokens_have_a_expiration_time_of_24_hours___Once_expired_you_will_have_to_use_your_Subspace_private_API_and_public_token_to_request_a_new_one____The_Subspace_private_token_can_be_rotated_from_within_the_Subspace_console___Rotation_may_take_up_to_10_minutes_for_all_systems_to_update_state_to_invalidate_the_older_token_and_enable_the_new_one__Keep_your_secret_token_safe__Your_secret_token_can_make_any_API_call_on_behalf_of_your_account_including_changes_that_may_impact_billing_such_as_enabling_pay_as_you_go_charges__Do_not_store_your_secret_token_in_your_version_control_system__Do_not_use_your_secret_token_outside_your_web_server_such_as_a_browser_mobile_app_or_distributed_file____You_may_use_the_Subspace_console_to_acquire_an_API_token___You_may_use_the_Subspace_console_to_disable_pay_as_you_go__This_may_prevent_unexpected_charges_due_to_unauthorized_or_abnormal_usage_Acquiring_a_valid_JWTCommand_line_examplecurl___request_POST____________url_https__id_subspace_com_oauth_token____________header_content_type_application_json____________data__client_id_YOURCLIENTID_client_secret_YOURCLIENTSECRET_audience_https__api_subspace_com__grant_type_client_credentials_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SubspaceProductApi = require('index'); // See note below*.
* var xxxSvc = new SubspaceProductApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SubspaceProductApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SubspaceProductApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SubspaceProductApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Body model constructor.
     * @property {module:model/Body}
     */
    Body,

    /**
     * The Body1 model constructor.
     * @property {module:model/Body1}
     */
    Body1,

    /**
     * The ProtobufAny model constructor.
     * @property {module:model/ProtobufAny}
     */
    ProtobufAny,

    /**
     * The RpcStatus model constructor.
     * @property {module:model/RpcStatus}
     */
    RpcStatus,

    /**
     * The V1Accelerator model constructor.
     * @property {module:model/V1Accelerator}
     */
    V1Accelerator,

    /**
     * The V1ListAcceleratorsResponse model constructor.
     * @property {module:model/V1ListAcceleratorsResponse}
     */
    V1ListAcceleratorsResponse,

    /**
     * The V1ListSipTeleportResponse model constructor.
     * @property {module:model/V1ListSipTeleportResponse}
     */
    V1ListSipTeleportResponse,

    /**
     * The V1NextPage model constructor.
     * @property {module:model/V1NextPage}
     */
    V1NextPage,

    /**
     * The V1Protocol model constructor.
     * @property {module:model/V1Protocol}
     */
    V1Protocol,

    /**
     * The V1SipTeleportResponse model constructor.
     * @property {module:model/V1SipTeleportResponse}
     */
    V1SipTeleportResponse,

    /**
     * The V1SipTeleportStatus model constructor.
     * @property {module:model/V1SipTeleportStatus}
     */
    V1SipTeleportStatus,

    /**
     * The V1TeleportAddresses model constructor.
     * @property {module:model/V1TeleportAddresses}
     */
    V1TeleportAddresses,

    /**
     * The V1TransportType model constructor.
     * @property {module:model/V1TransportType}
     */
    V1TransportType,

    /**
    * The AcceleratorServiceApi service constructor.
    * @property {module:api/AcceleratorServiceApi}
    */
    AcceleratorServiceApi,

    /**
    * The SipTeleportServiceApi service constructor.
    * @property {module:api/SipTeleportServiceApi}
    */
    SipTeleportServiceApi
};
